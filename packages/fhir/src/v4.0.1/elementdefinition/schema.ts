import { z } from "zod/v4";
import * as types from "./types";
import * as primitives from "../primitives";
import { getCachedSchema, ZodNever } from "../schema-cache";
import {
  createExtensionSchema,
  createElementSchema,
  createCodingSchema,
  createAddressSchema,
  createAgeSchema,
  createAnnotationSchema,
  createAttachmentSchema,
  createCodeableConceptSchema,
  createContactPointSchema,
  createCountSchema,
  createDistanceSchema,
  createDurationSchema,
  createHumanNameSchema,
  createIdentifierSchema,
  createMoneySchema,
  createPeriodSchema,
  createQuantitySchema,
  createRangeSchema,
  createRatioSchema,
  createReferenceSchema,
  createSampledDataSchema,
  createSignatureSchema,
  createTimingSchema,
  createContactDetailSchema,
  createContributorSchema,
  createDataRequirementSchema,
  createExpressionSchema,
  createParameterDefinitionSchema,
  createRelatedArtifactSchema,
  createTriggerDefinitionSchema,
  createUsageContextSchema,
  createDosageSchema,
  createMetaSchema,
} from "../core/schema";

/* Generated from FHIR JSON Schema */

export function createElementDefinitionSchema() {
  return getCachedSchema("ElementDefinition", [], () => {
    const baseSchema: z.ZodType<types.ElementDefinition> = z.strictObject({
      id: primitives.getStringSchema().optional(),
      extension: z.array(createExtensionSchema()).optional(),
      modifierExtension: z.array(createExtensionSchema()).optional(),
      path: primitives.getStringSchema(),
      _path: createElementSchema().optional(),
      representation: z
        .enum(["xmlAttr", "xmlText", "typeAttr", "cdaText", "xhtml"])
        .array()
        .optional(),
      _representation: z.array(createElementSchema()).optional(),
      sliceName: primitives.getStringSchema().optional(),
      _sliceName: createElementSchema().optional(),
      sliceIsConstraining: primitives.getBooleanSchema().optional(),
      _sliceIsConstraining: createElementSchema().optional(),
      label: primitives.getStringSchema().optional(),
      _label: createElementSchema().optional(),
      code: z.array(createCodingSchema()).optional(),
      slicing: createElementDefinitionSlicingSchema().optional(),
      short: primitives.getStringSchema().optional(),
      _short: createElementSchema().optional(),
      definition: primitives.getMarkdownSchema().optional(),
      _definition: createElementSchema().optional(),
      comment: primitives.getMarkdownSchema().optional(),
      _comment: createElementSchema().optional(),
      requirements: primitives.getMarkdownSchema().optional(),
      _requirements: createElementSchema().optional(),
      alias: z.array(primitives.getStringSchema()).optional(),
      _alias: z.array(createElementSchema()).optional(),
      min: primitives.getUnsignedIntSchema().optional(),
      _min: createElementSchema().optional(),
      max: primitives.getStringSchema().optional(),
      _max: createElementSchema().optional(),
      base: createElementDefinitionBaseSchema().optional(),
      contentReference: primitives.getUriSchema().optional(),
      _contentReference: createElementSchema().optional(),
      type: z.array(createElementDefinitionTypeSchema()).optional(),
      defaultValueBase64Binary: z.string().optional(),
      _defaultValueBase64Binary: createElementSchema().optional(),
      defaultValueBoolean: z.boolean().optional(),
      _defaultValueBoolean: createElementSchema().optional(),
      defaultValueCanonical: z.string().optional(),
      _defaultValueCanonical: createElementSchema().optional(),
      defaultValueCode: z.string().optional(),
      _defaultValueCode: createElementSchema().optional(),
      defaultValueDate: z.string().optional(),
      _defaultValueDate: createElementSchema().optional(),
      defaultValueDateTime: z.string().optional(),
      _defaultValueDateTime: createElementSchema().optional(),
      defaultValueDecimal: z.number().optional(),
      _defaultValueDecimal: createElementSchema().optional(),
      defaultValueId: z.string().optional(),
      _defaultValueId: createElementSchema().optional(),
      defaultValueInstant: z.string().optional(),
      _defaultValueInstant: createElementSchema().optional(),
      defaultValueInteger: z.number().optional(),
      _defaultValueInteger: createElementSchema().optional(),
      defaultValueMarkdown: z.string().optional(),
      _defaultValueMarkdown: createElementSchema().optional(),
      defaultValueOid: z.string().optional(),
      _defaultValueOid: createElementSchema().optional(),
      defaultValuePositiveInt: z.number().optional(),
      _defaultValuePositiveInt: createElementSchema().optional(),
      defaultValueString: z.string().optional(),
      _defaultValueString: createElementSchema().optional(),
      defaultValueTime: z.string().optional(),
      _defaultValueTime: createElementSchema().optional(),
      defaultValueUnsignedInt: z.number().optional(),
      _defaultValueUnsignedInt: createElementSchema().optional(),
      defaultValueUri: z.string().optional(),
      _defaultValueUri: createElementSchema().optional(),
      defaultValueUrl: z.string().optional(),
      _defaultValueUrl: createElementSchema().optional(),
      defaultValueUuid: z.string().optional(),
      _defaultValueUuid: createElementSchema().optional(),
      defaultValueAddress: createAddressSchema().optional(),
      defaultValueAge: createAgeSchema().optional(),
      defaultValueAnnotation: createAnnotationSchema().optional(),
      defaultValueAttachment: createAttachmentSchema().optional(),
      defaultValueCodeableConcept: createCodeableConceptSchema().optional(),
      defaultValueCoding: createCodingSchema().optional(),
      defaultValueContactPoint: createContactPointSchema().optional(),
      defaultValueCount: createCountSchema().optional(),
      defaultValueDistance: createDistanceSchema().optional(),
      defaultValueDuration: createDurationSchema().optional(),
      defaultValueHumanName: createHumanNameSchema().optional(),
      defaultValueIdentifier: createIdentifierSchema().optional(),
      defaultValueMoney: createMoneySchema().optional(),
      defaultValuePeriod: createPeriodSchema().optional(),
      defaultValueQuantity: createQuantitySchema().optional(),
      defaultValueRange: createRangeSchema().optional(),
      defaultValueRatio: createRatioSchema().optional(),
      defaultValueReference: createReferenceSchema().optional(),
      defaultValueSampledData: createSampledDataSchema().optional(),
      defaultValueSignature: createSignatureSchema().optional(),
      defaultValueTiming: createTimingSchema().optional(),
      defaultValueContactDetail: createContactDetailSchema().optional(),
      defaultValueContributor: createContributorSchema().optional(),
      defaultValueDataRequirement: createDataRequirementSchema().optional(),
      defaultValueExpression: createExpressionSchema().optional(),
      defaultValueParameterDefinition:
        createParameterDefinitionSchema().optional(),
      defaultValueRelatedArtifact: createRelatedArtifactSchema().optional(),
      defaultValueTriggerDefinition: createTriggerDefinitionSchema().optional(),
      defaultValueUsageContext: createUsageContextSchema().optional(),
      defaultValueDosage: createDosageSchema().optional(),
      defaultValueMeta: createMetaSchema().optional(),
      meaningWhenMissing: primitives.getMarkdownSchema().optional(),
      _meaningWhenMissing: createElementSchema().optional(),
      orderMeaning: primitives.getStringSchema().optional(),
      _orderMeaning: createElementSchema().optional(),
      fixedBase64Binary: z.string().optional(),
      _fixedBase64Binary: createElementSchema().optional(),
      fixedBoolean: z.boolean().optional(),
      _fixedBoolean: createElementSchema().optional(),
      fixedCanonical: z.string().optional(),
      _fixedCanonical: createElementSchema().optional(),
      fixedCode: z.string().optional(),
      _fixedCode: createElementSchema().optional(),
      fixedDate: z.string().optional(),
      _fixedDate: createElementSchema().optional(),
      fixedDateTime: z.string().optional(),
      _fixedDateTime: createElementSchema().optional(),
      fixedDecimal: z.number().optional(),
      _fixedDecimal: createElementSchema().optional(),
      fixedId: z.string().optional(),
      _fixedId: createElementSchema().optional(),
      fixedInstant: z.string().optional(),
      _fixedInstant: createElementSchema().optional(),
      fixedInteger: z.number().optional(),
      _fixedInteger: createElementSchema().optional(),
      fixedMarkdown: z.string().optional(),
      _fixedMarkdown: createElementSchema().optional(),
      fixedOid: z.string().optional(),
      _fixedOid: createElementSchema().optional(),
      fixedPositiveInt: z.number().optional(),
      _fixedPositiveInt: createElementSchema().optional(),
      fixedString: z.string().optional(),
      _fixedString: createElementSchema().optional(),
      fixedTime: z.string().optional(),
      _fixedTime: createElementSchema().optional(),
      fixedUnsignedInt: z.number().optional(),
      _fixedUnsignedInt: createElementSchema().optional(),
      fixedUri: z.string().optional(),
      _fixedUri: createElementSchema().optional(),
      fixedUrl: z.string().optional(),
      _fixedUrl: createElementSchema().optional(),
      fixedUuid: z.string().optional(),
      _fixedUuid: createElementSchema().optional(),
      fixedAddress: createAddressSchema().optional(),
      fixedAge: createAgeSchema().optional(),
      fixedAnnotation: createAnnotationSchema().optional(),
      fixedAttachment: createAttachmentSchema().optional(),
      fixedCodeableConcept: createCodeableConceptSchema().optional(),
      fixedCoding: createCodingSchema().optional(),
      fixedContactPoint: createContactPointSchema().optional(),
      fixedCount: createCountSchema().optional(),
      fixedDistance: createDistanceSchema().optional(),
      fixedDuration: createDurationSchema().optional(),
      fixedHumanName: createHumanNameSchema().optional(),
      fixedIdentifier: createIdentifierSchema().optional(),
      fixedMoney: createMoneySchema().optional(),
      fixedPeriod: createPeriodSchema().optional(),
      fixedQuantity: createQuantitySchema().optional(),
      fixedRange: createRangeSchema().optional(),
      fixedRatio: createRatioSchema().optional(),
      fixedReference: createReferenceSchema().optional(),
      fixedSampledData: createSampledDataSchema().optional(),
      fixedSignature: createSignatureSchema().optional(),
      fixedTiming: createTimingSchema().optional(),
      fixedContactDetail: createContactDetailSchema().optional(),
      fixedContributor: createContributorSchema().optional(),
      fixedDataRequirement: createDataRequirementSchema().optional(),
      fixedExpression: createExpressionSchema().optional(),
      fixedParameterDefinition: createParameterDefinitionSchema().optional(),
      fixedRelatedArtifact: createRelatedArtifactSchema().optional(),
      fixedTriggerDefinition: createTriggerDefinitionSchema().optional(),
      fixedUsageContext: createUsageContextSchema().optional(),
      fixedDosage: createDosageSchema().optional(),
      fixedMeta: createMetaSchema().optional(),
      patternBase64Binary: z.string().optional(),
      _patternBase64Binary: createElementSchema().optional(),
      patternBoolean: z.boolean().optional(),
      _patternBoolean: createElementSchema().optional(),
      patternCanonical: z.string().optional(),
      _patternCanonical: createElementSchema().optional(),
      patternCode: z.string().optional(),
      _patternCode: createElementSchema().optional(),
      patternDate: z.string().optional(),
      _patternDate: createElementSchema().optional(),
      patternDateTime: z.string().optional(),
      _patternDateTime: createElementSchema().optional(),
      patternDecimal: z.number().optional(),
      _patternDecimal: createElementSchema().optional(),
      patternId: z.string().optional(),
      _patternId: createElementSchema().optional(),
      patternInstant: z.string().optional(),
      _patternInstant: createElementSchema().optional(),
      patternInteger: z.number().optional(),
      _patternInteger: createElementSchema().optional(),
      patternMarkdown: z.string().optional(),
      _patternMarkdown: createElementSchema().optional(),
      patternOid: z.string().optional(),
      _patternOid: createElementSchema().optional(),
      patternPositiveInt: z.number().optional(),
      _patternPositiveInt: createElementSchema().optional(),
      patternString: z.string().optional(),
      _patternString: createElementSchema().optional(),
      patternTime: z.string().optional(),
      _patternTime: createElementSchema().optional(),
      patternUnsignedInt: z.number().optional(),
      _patternUnsignedInt: createElementSchema().optional(),
      patternUri: z.string().optional(),
      _patternUri: createElementSchema().optional(),
      patternUrl: z.string().optional(),
      _patternUrl: createElementSchema().optional(),
      patternUuid: z.string().optional(),
      _patternUuid: createElementSchema().optional(),
      patternAddress: createAddressSchema().optional(),
      patternAge: createAgeSchema().optional(),
      patternAnnotation: createAnnotationSchema().optional(),
      patternAttachment: createAttachmentSchema().optional(),
      patternCodeableConcept: createCodeableConceptSchema().optional(),
      patternCoding: createCodingSchema().optional(),
      patternContactPoint: createContactPointSchema().optional(),
      patternCount: createCountSchema().optional(),
      patternDistance: createDistanceSchema().optional(),
      patternDuration: createDurationSchema().optional(),
      patternHumanName: createHumanNameSchema().optional(),
      patternIdentifier: createIdentifierSchema().optional(),
      patternMoney: createMoneySchema().optional(),
      patternPeriod: createPeriodSchema().optional(),
      patternQuantity: createQuantitySchema().optional(),
      patternRange: createRangeSchema().optional(),
      patternRatio: createRatioSchema().optional(),
      patternReference: createReferenceSchema().optional(),
      patternSampledData: createSampledDataSchema().optional(),
      patternSignature: createSignatureSchema().optional(),
      patternTiming: createTimingSchema().optional(),
      patternContactDetail: createContactDetailSchema().optional(),
      patternContributor: createContributorSchema().optional(),
      patternDataRequirement: createDataRequirementSchema().optional(),
      patternExpression: createExpressionSchema().optional(),
      patternParameterDefinition: createParameterDefinitionSchema().optional(),
      patternRelatedArtifact: createRelatedArtifactSchema().optional(),
      patternTriggerDefinition: createTriggerDefinitionSchema().optional(),
      patternUsageContext: createUsageContextSchema().optional(),
      patternDosage: createDosageSchema().optional(),
      patternMeta: createMetaSchema().optional(),
      example: z.array(createElementDefinitionExampleSchema()).optional(),
      minValueDate: z.string().optional(),
      _minValueDate: createElementSchema().optional(),
      minValueDateTime: z.string().optional(),
      _minValueDateTime: createElementSchema().optional(),
      minValueInstant: z.string().optional(),
      _minValueInstant: createElementSchema().optional(),
      minValueTime: z.string().optional(),
      _minValueTime: createElementSchema().optional(),
      minValueDecimal: z.number().optional(),
      _minValueDecimal: createElementSchema().optional(),
      minValueInteger: z.number().optional(),
      _minValueInteger: createElementSchema().optional(),
      minValuePositiveInt: z.number().optional(),
      _minValuePositiveInt: createElementSchema().optional(),
      minValueUnsignedInt: z.number().optional(),
      _minValueUnsignedInt: createElementSchema().optional(),
      minValueQuantity: createQuantitySchema().optional(),
      maxValueDate: z.string().optional(),
      _maxValueDate: createElementSchema().optional(),
      maxValueDateTime: z.string().optional(),
      _maxValueDateTime: createElementSchema().optional(),
      maxValueInstant: z.string().optional(),
      _maxValueInstant: createElementSchema().optional(),
      maxValueTime: z.string().optional(),
      _maxValueTime: createElementSchema().optional(),
      maxValueDecimal: z.number().optional(),
      _maxValueDecimal: createElementSchema().optional(),
      maxValueInteger: z.number().optional(),
      _maxValueInteger: createElementSchema().optional(),
      maxValuePositiveInt: z.number().optional(),
      _maxValuePositiveInt: createElementSchema().optional(),
      maxValueUnsignedInt: z.number().optional(),
      _maxValueUnsignedInt: createElementSchema().optional(),
      maxValueQuantity: createQuantitySchema().optional(),
      maxLength: primitives.getIntegerSchema().optional(),
      _maxLength: createElementSchema().optional(),
      condition: z.array(primitives.getIdSchema()).optional(),
      _condition: z.array(createElementSchema()).optional(),
      constraint: z.array(createElementDefinitionConstraintSchema()).optional(),
      mustSupport: primitives.getBooleanSchema().optional(),
      _mustSupport: createElementSchema().optional(),
      isModifier: primitives.getBooleanSchema().optional(),
      _isModifier: createElementSchema().optional(),
      isModifierReason: primitives.getStringSchema().optional(),
      _isModifierReason: createElementSchema().optional(),
      isSummary: primitives.getBooleanSchema().optional(),
      _isSummary: createElementSchema().optional(),
      binding: createElementDefinitionBindingSchema().optional(),
      mapping: z.array(createElementDefinitionMappingSchema()).optional(),
    });

    return baseSchema;
  });
}

export function createElementDefinitionSlicingSchema() {
  return getCachedSchema("ElementDefinitionSlicing", [], () => {
    const baseSchema: z.ZodType<types.ElementDefinitionSlicing> =
      z.strictObject({
        id: primitives.getStringSchema().optional(),
        extension: z.array(createExtensionSchema()).optional(),
        modifierExtension: z.array(createExtensionSchema()).optional(),
        discriminator: z
          .array(createElementDefinitionDiscriminatorSchema())
          .optional(),
        description: primitives.getStringSchema().optional(),
        _description: createElementSchema().optional(),
        ordered: primitives.getBooleanSchema().optional(),
        _ordered: createElementSchema().optional(),
        rules: z.enum(["closed", "open", "openAtEnd"]),
        _rules: createElementSchema().optional(),
      });

    return baseSchema;
  });
}

export function createElementDefinitionDiscriminatorSchema() {
  return getCachedSchema("ElementDefinitionDiscriminator", [], () => {
    const baseSchema: z.ZodType<types.ElementDefinitionDiscriminator> =
      z.strictObject({
        id: primitives.getStringSchema().optional(),
        extension: z.array(createExtensionSchema()).optional(),
        modifierExtension: z.array(createExtensionSchema()).optional(),
        type: z
          .enum(["value", "exists", "pattern", "type", "profile"])
          .optional(),
        _type: createElementSchema().optional(),
        path: primitives.getStringSchema().optional(),
        _path: createElementSchema().optional(),
      });

    return baseSchema;
  });
}

export function createElementDefinitionBaseSchema() {
  return getCachedSchema("ElementDefinitionBase", [], () => {
    const baseSchema: z.ZodType<types.ElementDefinitionBase> = z.strictObject({
      id: primitives.getStringSchema().optional(),
      extension: z.array(createExtensionSchema()).optional(),
      modifierExtension: z.array(createExtensionSchema()).optional(),
      path: primitives.getStringSchema(),
      _path: createElementSchema().optional(),
      min: primitives.getUnsignedIntSchema(),
      _min: createElementSchema().optional(),
      max: primitives.getStringSchema(),
      _max: createElementSchema().optional(),
    });

    return baseSchema;
  });
}

export function createElementDefinitionTypeSchema() {
  return getCachedSchema("ElementDefinitionType", [], () => {
    const baseSchema: z.ZodType<types.ElementDefinitionType> = z.strictObject({
      id: primitives.getStringSchema().optional(),
      extension: z.array(createExtensionSchema()).optional(),
      modifierExtension: z.array(createExtensionSchema()).optional(),
      code: primitives.getUriSchema(),
      _code: createElementSchema().optional(),
      profile: z.array(primitives.getCanonicalSchema()).optional(),
      _profile: z.array(createElementSchema()).optional(),
      targetProfile: z.array(primitives.getCanonicalSchema()).optional(),
      _targetProfile: z.array(createElementSchema()).optional(),
      aggregation: z
        .enum(["contained", "referenced", "bundled"])
        .array()
        .optional(),
      _aggregation: z.array(createElementSchema()).optional(),
      versioning: z.enum(["either", "independent", "specific"]).optional(),
      _versioning: createElementSchema().optional(),
    });

    return baseSchema;
  });
}

export function createElementDefinitionExampleSchema() {
  return getCachedSchema("ElementDefinitionExample", [], () => {
    const baseSchema: z.ZodType<types.ElementDefinitionExample> =
      z.strictObject({
        id: primitives.getStringSchema().optional(),
        extension: z.array(createExtensionSchema()).optional(),
        modifierExtension: z.array(createExtensionSchema()).optional(),
        label: primitives.getStringSchema(),
        _label: createElementSchema().optional(),
        valueBase64Binary: z.string().optional(),
        _valueBase64Binary: createElementSchema().optional(),
        valueBoolean: z.boolean().optional(),
        _valueBoolean: createElementSchema().optional(),
        valueCanonical: z.string().optional(),
        _valueCanonical: createElementSchema().optional(),
        valueCode: z.string().optional(),
        _valueCode: createElementSchema().optional(),
        valueDate: z.string().optional(),
        _valueDate: createElementSchema().optional(),
        valueDateTime: z.string().optional(),
        _valueDateTime: createElementSchema().optional(),
        valueDecimal: z.number().optional(),
        _valueDecimal: createElementSchema().optional(),
        valueId: z.string().optional(),
        _valueId: createElementSchema().optional(),
        valueInstant: z.string().optional(),
        _valueInstant: createElementSchema().optional(),
        valueInteger: z.number().optional(),
        _valueInteger: createElementSchema().optional(),
        valueMarkdown: z.string().optional(),
        _valueMarkdown: createElementSchema().optional(),
        valueOid: z.string().optional(),
        _valueOid: createElementSchema().optional(),
        valuePositiveInt: z.number().optional(),
        _valuePositiveInt: createElementSchema().optional(),
        valueString: z.string().optional(),
        _valueString: createElementSchema().optional(),
        valueTime: z.string().optional(),
        _valueTime: createElementSchema().optional(),
        valueUnsignedInt: z.number().optional(),
        _valueUnsignedInt: createElementSchema().optional(),
        valueUri: z.string().optional(),
        _valueUri: createElementSchema().optional(),
        valueUrl: z.string().optional(),
        _valueUrl: createElementSchema().optional(),
        valueUuid: z.string().optional(),
        _valueUuid: createElementSchema().optional(),
        valueAddress: createAddressSchema().optional(),
        valueAge: createAgeSchema().optional(),
        valueAnnotation: createAnnotationSchema().optional(),
        valueAttachment: createAttachmentSchema().optional(),
        valueCodeableConcept: createCodeableConceptSchema().optional(),
        valueCoding: createCodingSchema().optional(),
        valueContactPoint: createContactPointSchema().optional(),
        valueCount: createCountSchema().optional(),
        valueDistance: createDistanceSchema().optional(),
        valueDuration: createDurationSchema().optional(),
        valueHumanName: createHumanNameSchema().optional(),
        valueIdentifier: createIdentifierSchema().optional(),
        valueMoney: createMoneySchema().optional(),
        valuePeriod: createPeriodSchema().optional(),
        valueQuantity: createQuantitySchema().optional(),
        valueRange: createRangeSchema().optional(),
        valueRatio: createRatioSchema().optional(),
        valueReference: createReferenceSchema().optional(),
        valueSampledData: createSampledDataSchema().optional(),
        valueSignature: createSignatureSchema().optional(),
        valueTiming: createTimingSchema().optional(),
        valueContactDetail: createContactDetailSchema().optional(),
        valueContributor: createContributorSchema().optional(),
        valueDataRequirement: createDataRequirementSchema().optional(),
        valueExpression: createExpressionSchema().optional(),
        valueParameterDefinition: createParameterDefinitionSchema().optional(),
        valueRelatedArtifact: createRelatedArtifactSchema().optional(),
        valueTriggerDefinition: createTriggerDefinitionSchema().optional(),
        valueUsageContext: createUsageContextSchema().optional(),
        valueDosage: createDosageSchema().optional(),
        valueMeta: createMetaSchema().optional(),
      });

    return baseSchema;
  });
}

export function createElementDefinitionConstraintSchema() {
  return getCachedSchema("ElementDefinitionConstraint", [], () => {
    const baseSchema: z.ZodType<types.ElementDefinitionConstraint> =
      z.strictObject({
        id: primitives.getStringSchema().optional(),
        extension: z.array(createExtensionSchema()).optional(),
        modifierExtension: z.array(createExtensionSchema()).optional(),
        key: primitives.getIdSchema(),
        _key: createElementSchema().optional(),
        requirements: primitives.getStringSchema().optional(),
        _requirements: createElementSchema().optional(),
        severity: z.enum(["error", "warning"]),
        _severity: createElementSchema().optional(),
        human: primitives.getStringSchema(),
        _human: createElementSchema().optional(),
        expression: primitives.getStringSchema().optional(),
        _expression: createElementSchema().optional(),
        xpath: primitives.getStringSchema().optional(),
        _xpath: createElementSchema().optional(),
        source: primitives.getCanonicalSchema().optional(),
      });

    return baseSchema;
  });
}

export function createElementDefinitionBindingSchema() {
  return getCachedSchema("ElementDefinitionBinding", [], () => {
    const baseSchema: z.ZodType<types.ElementDefinitionBinding> =
      z.strictObject({
        id: primitives.getStringSchema().optional(),
        extension: z.array(createExtensionSchema()).optional(),
        modifierExtension: z.array(createExtensionSchema()).optional(),
        strength: z.enum(["required", "extensible", "preferred", "example"]),
        _strength: createElementSchema().optional(),
        description: primitives.getStringSchema().optional(),
        _description: createElementSchema().optional(),
        valueSet: primitives.getCanonicalSchema().optional(),
      });

    return baseSchema;
  });
}

export function createElementDefinitionMappingSchema() {
  return getCachedSchema("ElementDefinitionMapping", [], () => {
    const baseSchema: z.ZodType<types.ElementDefinitionMapping> =
      z.strictObject({
        id: primitives.getStringSchema().optional(),
        extension: z.array(createExtensionSchema()).optional(),
        modifierExtension: z.array(createExtensionSchema()).optional(),
        identity: primitives.getIdSchema(),
        _identity: createElementSchema().optional(),
        language: primitives.getCodeSchema().optional(),
        _language: createElementSchema().optional(),
        map: primitives.getStringSchema(),
        _map: createElementSchema().optional(),
        comment: primitives.getStringSchema().optional(),
        _comment: createElementSchema().optional(),
      });

    return baseSchema;
  });
}
